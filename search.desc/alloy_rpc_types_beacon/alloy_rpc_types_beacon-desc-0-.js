searchState.loadedDescShard("alloy_rpc_types_beacon", 0, "Beacon API types\nBLS public key type\nBLS signature type\nBeacon API events support. Support for the Beacon API …\nBeacon block header types.\nPayload support for the beacon API.\nThe Domain Separation Tag for hash_to_point in Ethereum …\nThe number of bytes in a BLS12-381 public key.\nThe number of bytes in a BLS12-381 secret key.\nThe number of bytes in a BLS12-381 signature.\nEvent for the <code>Attestation</code> topic of the beacon API node …\nTopic variant for the eventstream API\nEvent for the <code>BlobSidecar</code> topic of the beacon API node …\nEvent for the <code>Block</code> topic of the beacon API node event …\nEvent for the <code>BlsToExecutionChange</code> topic of the beacon API …\nEvent for the <code>ChainReorg</code> topic of the beacon API node …\nEvent for the <code>ContributionAndProof</code> topic of the beacon API …\nEvent for the <code>Deposit</code> topic of the beacon API node event …\nEvent for the <code>Head</code> topic of the beacon API node event …\nEvent for the <code>LightClientFinalityUpdate</code> topic of the …\nEvent for the <code>LightClientOptimisticUpdate</code> topic of the …\nData of the event that contains the payload attributes\nEvent for the <code>payload_attributes</code> topic of the beacon API …\nEvent for the <code>VoluntaryExit</code> topic of the beacon API node …\nReturns the payload attributes\nWrapped data of the event.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nthe execution block hash of the parent block.\nthe execution block number of the parent block.\nthe beacon block root of the parent block to be built upon.\nBeacon API encoding of <code>PayloadAttributesV&lt;N&gt;</code> as defined by …\nThe slot at which a block using these payload attributes …\nThe execution block number of the parent block. the …\nReturns the identifier value for the eventstream query\nthe identifier of the beacon hard fork at <code>proposal_slot</code>, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe header of a beacon block.\nBeaconBlockHeader with a signature.\nContainer type for a beacon block header.\nThe response to a request for a <strong>single</strong> beacon block …\nThe response to a request for beacon block headers: …\nThe tree hash merkle root of the BeaconBlockBody for the …\nWhether the block is part of the canonical chain\nContainer for the header data.\nContainer for the header data.\nTrue if the response references an unverified execution …\nTrue if the response references an unverified execution …\nTrue if the response references the finalized history of …\nTrue if the response references the finalized history of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe <code>SignedBeaconBlockHeader</code> object envelope from the CL …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>BeaconBlockHeader</code> object from the CL spec.\nThe signing merkle root of the parent BeaconBlock.\nIndex of validator in validator registry.\nroot hash of the block\nThe slot to which this block corresponds.\nThe tree hash merkle root of the BeaconState for the …\nRepresents all possible payload versions.\nOptimism Payload Attributes\nThe header of the execution payload.\nResponse object of GET …\nV1 payload\nV2 payload\nV3 payload\nV4 payload\nA helper module for serializing and deserializing the …\nA helper module for serializing and deserializing optimism …\nA helper serde module to convert from/to the Beacon API …\nA helper serde module to convert from/to the Beacon API …\nA helper serde module to convert from/to the Beacon API …\nA helper serde module to convert from/to the Beacon API …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInner V1 payload\nInner V1 payload\nInner V1 payload\nArray of <code>Withdrawal</code> enabled with V2 See …\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.\nBundle of blobs for a given block\nIndividual Blob data that belongs to a 4844 transaction.\nIntermediate type for BlobTransactionSidecar matching\nBlob data\nVec of individual blob data\nHelper function to deserialize boxed blobs\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBlob index\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe blob’s commitment\nThe blob’s inclusion proofs\nThe blob’s proof\nReturns a BlobTransactionSidecar of len num_hashes.\nThe block header containing the blob\nSame as Withdrawal but respects the Beacon API format …\nA helper serde module to convert from/to the Beacon API …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.")